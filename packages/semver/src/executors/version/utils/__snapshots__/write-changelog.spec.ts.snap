// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`writeChangelog --preset should load custom preset 1`] = `
Object {
  "conventionalChangelog": Object {
    "parserOpts": Object {
      "breakingHeaderPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!: \\(\\.\\*\\)\\$/,
      "headerCorrespondence": Array [
        "type",
        "scope",
        "subject",
      ],
      "headerPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!\\?: \\(\\.\\*\\)\\$/,
      "issuePrefixes": Array [
        "#",
      ],
      "noteKeywords": Array [
        "BREAKING CHANGE",
        "BREAKING-CHANGE",
      ],
      "revertCorrespondence": Array [
        "header",
        "hash",
      ],
      "revertPattern": /\\^\\(\\?:Revert\\|revert:\\)\\\\s"\\?\\(\\[\\\\s\\\\S\\]\\+\\?\\)"\\?\\\\s\\*This reverts commit \\(\\\\w\\*\\)\\\\\\./i,
    },
    "writerOpts": Object {
      "commitGroupsSort": [Function],
      "commitPartial": "*{{#if scope}} **{{scope}}:**
{{~/if}} {{#if subject}}
  {{~subject}}
{{~else}}
  {{~header}}
{{~/if}}

{{~!-- commit link --}}{{~#if hash}} {{#if @root.linkReferences~}}
  ([{{shortHash}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/commit/{{hash}}))
{{~else}}
  {{~shortHash}}
{{~/if}}{{~/if}}

{{~!-- commit references --}}
{{~#if references~}}
  , closes
  {{~#each references}} {{#if @root.linkReferences~}}
    [
    {{~#if this.owner}}
      {{~this.owner}}/
    {{~/if}}
    {{~this.repository}}{{this.prefix}}{{this.issue}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/issues/{{this.issue}})
  {{~else}}
    {{~#if this.owner}}
      {{~this.owner}}/
    {{~/if}}
    {{~this.repository}}{{this.prefix}}{{this.issue}}
  {{~/if}}{{/each}}
{{~/if}}

",
      "commitsSort": Array [
        "scope",
        "subject",
      ],
      "footerPartial": "",
      "groupBy": "type",
      "headerPartial": "## {{#if @root.linkCompare~}}
  [{{version}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/compare/{{previousTag}}...{{currentTag}})
{{~else}}
  {{~version}}
{{~/if}}
{{~#if title}} \\"{{title}}\\"
{{~/if}}
{{~#if date}} ({{date}})
{{/if}}
",
      "mainTemplate": "{{> header}}

{{#if noteGroups}}
{{#each noteGroups}}

### ⚠ {{title}}

{{#each notes}}
* {{#if commit.scope}}**{{commit.scope}}:** {{/if}}{{text}}
{{/each}}
{{/each}}
{{/if}}
{{#each commitGroups}}

{{#if title}}
### {{title}}

{{/if}}
{{#each commits}}
{{> commit root=@root}}
{{/each}}

{{/each}}
",
      "noteGroupsSort": "title",
      "notesSort": [Function],
      "transform": [Function],
    },
  },
  "gitRawCommitsOpts": Object {
    "ignore": undefined,
    "noMerges": null,
  },
  "parserOpts": Object {
    "breakingHeaderPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!: \\(\\.\\*\\)\\$/,
    "headerCorrespondence": Array [
      "type",
      "scope",
      "subject",
    ],
    "headerPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!\\?: \\(\\.\\*\\)\\$/,
    "issuePrefixes": Array [
      "#",
    ],
    "noteKeywords": Array [
      "BREAKING CHANGE",
      "BREAKING-CHANGE",
    ],
    "revertCorrespondence": Array [
      "header",
      "hash",
    ],
    "revertPattern": /\\^\\(\\?:Revert\\|revert:\\)\\\\s"\\?\\(\\[\\\\s\\\\S\\]\\+\\?\\)"\\?\\\\s\\*This reverts commit \\(\\\\w\\*\\)\\\\\\./i,
  },
  "recommendedBumpOpts": Object {
    "parserOpts": Object {
      "breakingHeaderPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!: \\(\\.\\*\\)\\$/,
      "headerCorrespondence": Array [
        "type",
        "scope",
        "subject",
      ],
      "headerPattern": /\\^\\(\\\\w\\*\\)\\(\\?:\\\\\\(\\(\\.\\*\\)\\\\\\)\\)\\?!\\?: \\(\\.\\*\\)\\$/,
      "issuePrefixes": Array [
        "#",
      ],
      "noteKeywords": Array [
        "BREAKING CHANGE",
        "BREAKING-CHANGE",
      ],
      "revertCorrespondence": Array [
        "header",
        "hash",
      ],
      "revertPattern": /\\^\\(\\?:Revert\\|revert:\\)\\\\s"\\?\\(\\[\\\\s\\\\S\\]\\+\\?\\)"\\?\\\\s\\*This reverts commit \\(\\\\w\\*\\)\\\\\\./i,
    },
    "whatBump": [Function],
  },
  "writerOpts": Object {
    "commitGroupsSort": [Function],
    "commitPartial": "*{{#if scope}} **{{scope}}:**
{{~/if}} {{#if subject}}
  {{~subject}}
{{~else}}
  {{~header}}
{{~/if}}

{{~!-- commit link --}}{{~#if hash}} {{#if @root.linkReferences~}}
  ([{{shortHash}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/commit/{{hash}}))
{{~else}}
  {{~shortHash}}
{{~/if}}{{~/if}}

{{~!-- commit references --}}
{{~#if references~}}
  , closes
  {{~#each references}} {{#if @root.linkReferences~}}
    [
    {{~#if this.owner}}
      {{~this.owner}}/
    {{~/if}}
    {{~this.repository}}{{this.prefix}}{{this.issue}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/issues/{{this.issue}})
  {{~else}}
    {{~#if this.owner}}
      {{~this.owner}}/
    {{~/if}}
    {{~this.repository}}{{this.prefix}}{{this.issue}}
  {{~/if}}{{/each}}
{{~/if}}

",
    "commitsSort": Array [
      "scope",
      "subject",
    ],
    "footerPartial": "",
    "groupBy": "type",
    "headerPartial": "## {{#if @root.linkCompare~}}
  [{{version}}]({{~@root.host}}/{{#if this.owner}}{{~this.owner}}{{else}}{{~@root.owner}}{{/if}}/{{#if this.repository}}{{~this.repository}}{{else}}{{~@root.repository}}{{/if}}/compare/{{previousTag}}...{{currentTag}})
{{~else}}
  {{~version}}
{{~/if}}
{{~#if title}} \\"{{title}}\\"
{{~/if}}
{{~#if date}} ({{date}})
{{/if}}
",
    "mainTemplate": "{{> header}}

{{#if noteGroups}}
{{#each noteGroups}}

### ⚠ {{title}}

{{#each notes}}
* {{#if commit.scope}}**{{commit.scope}}:** {{/if}}{{text}}
{{/each}}
{{/each}}
{{/if}}
{{#each commitGroups}}

{{#if title}}
### {{title}}

{{/if}}
{{#each commits}}
{{> commit root=@root}}
{{/each}}

{{/each}}
",
    "noteGroupsSort": "title",
    "notesSort": [Function],
    "transform": [Function],
  },
}
`;
